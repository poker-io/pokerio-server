name: CI (test)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup secrets
        env:
          USER: ${{ secrets.DB_USERNAME }}
          PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "export const user = '$USER';export const password = '$PASSWORD';" > src/secrets.ts

      - name: Setup SSH tunnel
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USERNAME }}
          KEY: ${{ secrets.SERVER_KEY }}
        run: |
          eval $(ssh-agent -s)
          echo "$KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          ssh -fN -L 5432:localhost:5432 ${USER}@${HOST}

      - name: Add firebase service account json file
        env:
          JSON: ${{ secrets.FIREBASE_SERVICEACCOUNTJSON }}
        run: echo $JSON > src/serviceAccount.json

      # Runs a set of commands using the runners shell
      - name: Start server
        run: |
          yarn install
          yarn test
      - name: Upload coverage reports to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v3

  # Run deploy on push to main only if tests succeed"
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            cd ~/Git/pokerio-server
            git pull origin main
            yarn
            yarn production
